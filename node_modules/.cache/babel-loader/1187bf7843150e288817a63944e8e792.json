{"ast":null,"code":"var _jsxFileName = \"/Users/curtisnoonan/Desktop/React Projects Feb 2020/organic_fruit_picker/src/components/card/card.component.jsx\";\nimport React from 'react';\nimport './card.styles.css';\nexport const Card = props => {\n  const deepCopyFunction = inObject => {\n    let outObject, value, key;\n\n    if (typeof inObject !== \"object\" || inObject === null) {\n      return inObject; // Return the value if inObject is not an object\n    } // Create an array or object to hold the values\n\n\n    outObject = Array.isArray(inObject) ? [] : {};\n\n    for (key in inObject) {\n      value = inObject[key]; // Recursively (deep) copy for nested objects, including arrays\n\n      outObject[key] = typeof value === \"object\" && value !== null ? deepCopyFunction(value) : value;\n    }\n\n    return outObject;\n  };\n\n  let imgurl = deepCopyFunction(props.fruit.tfvname);\n  imgurl = imgurl.toLowerCase();\n  imgurl = imgurl.split(\" \").join(\"\");\n  imgurl = imgurl.replace(\"almond\", \"almondfruit\");\n  imgurl = imgurl.replace(\"banana\", \"bananauk2\");\n  imgurl = imgurl.replace(\"tropicalalmondfruit\", \"talmond1\");\n  imgurl = imgurl.replace(\"aubergine\", \"aubermk\");\n  imgurl = imgurl.replace(\"cashewapple\", \"cashewapp\");\n  imgurl = imgurl.replace(\"chilipepper\", \"thaichili2\");\n  imgurl = imgurl.replace(\"dragonfruit\", \"dragon\");\n  imgurl = imgurl.replace(\"fennel\", \"fennelflr\");\n  imgurl = imgurl.replace(\"jambolan\", \"jambu\");\n  imgurl = imgurl.replace(\"kiwi\", \"kiwi3\");\n  imgurl = imgurl.replace(\"langsat\", \"langsat1\");\n  imgurl = imgurl.replace(\"curryleaf\", \"limda\");\n  imgurl = imgurl.replace(\"lychee\");\n  imgurl = imgurl.replace(\"mango\");\n  imgurl = imgurl.replace(\"neem\");\n  imgurl = imgurl.replace(\"olive\");\n  imgurl = imgurl.replace(\"passionfruit\");\n  imgurl = imgurl.replace(\"peanut\");\n  imgurl = imgurl.replace(\"pecan\");\n  imgurl = imgurl.replace(\"pineapple\");\n  imgurl = imgurl.replace(\"pineappleguava\");\n  imgurl = imgurl.replace(\"rosemary\");\n  imgurl = imgurl.replace(\"sugarapple\");\n  imgurl = imgurl.replace(\"turmeric\");\n  imgurl = imgurl.replace(\"mung\");\n  imgurl = imgurl.replace(\"curryleaf\");\n  imgurl = imgurl.replace(\"manilatamarind\");\n  imgurl = imgurl.replace(\"sesame\");\n  imgurl = imgurl.replace(\"sittu\");\n  imgurl = imgurl.replace(\"borajujube\");\n  imgurl = imgurl.replace(\"arbi\");\n  return React.createElement(\"div\", {\n    className: \"card-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    alt: props.fruit.tfvname,\n    src: `http://tropicalfruitandveg.com/images/${imgurl}.jpg`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, props.fruit.tfvname));\n};","map":{"version":3,"sources":["/Users/curtisnoonan/Desktop/React Projects Feb 2020/organic_fruit_picker/src/components/card/card.component.jsx"],"names":["React","Card","props","deepCopyFunction","inObject","outObject","value","key","Array","isArray","imgurl","fruit","tfvname","toLowerCase","split","join","replace"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport './card.styles.css';\n\nexport const Card = props => {\n   \n    const deepCopyFunction = inObject => {\n        let outObject, value, key\n      \n        if(typeof inObject !== \"object\" || inObject === null) {\n          return inObject // Return the value if inObject is not an object\n        }\n      \n        // Create an array or object to hold the values\n        outObject = Array.isArray(inObject) ? [] : {}\n      \n        for (key in inObject) {\n          value = inObject[key]\n      \n          // Recursively (deep) copy for nested objects, including arrays\n          outObject[key] = (typeof value === \"object\" && value !== null) ? deepCopyFunction(value) : value\n        }\n        \n        return outObject\n      }\n\n    let imgurl = deepCopyFunction(props.fruit.tfvname);\n    imgurl = imgurl.toLowerCase();\n    imgurl = imgurl.split(\" \").join(\"\"); \n    imgurl = imgurl.replace(\"almond\",\"almondfruit\");\n    imgurl = imgurl.replace(\"banana\",\"bananauk2\");\n    imgurl = imgurl.replace(\"tropicalalmondfruit\",\"talmond1\");\n    imgurl = imgurl.replace(\"aubergine\",\"aubermk\");\n    imgurl = imgurl.replace(\"cashewapple\",\"cashewapp\");\n    imgurl = imgurl.replace(\"chilipepper\",\"thaichili2\");\n    imgurl = imgurl.replace(\"dragonfruit\",\"dragon\");\n    imgurl = imgurl.replace(\"fennel\",\"fennelflr\");\n    imgurl = imgurl.replace(\"jambolan\",\"jambu\");\n    imgurl = imgurl.replace(\"kiwi\",\"kiwi3\");\n    imgurl = imgurl.replace(\"langsat\",\"langsat1\");\n    imgurl = imgurl.replace(\"curryleaf\",\"limda\");\n    imgurl = imgurl.replace(\"lychee\",)\n    imgurl = imgurl.replace(\"mango\",)\n    imgurl = imgurl.replace(\"neem\",)\n    imgurl = imgurl.replace(\"olive\",)\n    imgurl = imgurl.replace(\"passionfruit\",)\n    imgurl = imgurl.replace(\"peanut\",)\n    imgurl = imgurl.replace(\"pecan\",)\n    imgurl = imgurl.replace(\"pineapple\",)\n    imgurl = imgurl.replace(\"pineappleguava\",)\n    imgurl = imgurl.replace(\"rosemary\",)\n    imgurl = imgurl.replace(\"sugarapple\",)\n    imgurl = imgurl.replace(\"turmeric\",)\n    imgurl = imgurl.replace(\"mung\",)\n    imgurl = imgurl.replace(\"curryleaf\",)\n    imgurl = imgurl.replace(\"manilatamarind\",)\n    imgurl = imgurl.replace(\"sesame\",)\n    imgurl = imgurl.replace(\"sittu\",)\n    imgurl = imgurl.replace(\"borajujube\",)\n    imgurl = imgurl.replace(\"arbi\",)\n\n    return(\n    <div className=\"card-container\">\n    <img alt={props.fruit.tfvname}\n     src={`http://tropicalfruitandveg.com/images/${imgurl}.jpg`}/>\n        <h1>{props.fruit.tfvname}</h1> \n    </div>);\n};\n\n"]},"metadata":{},"sourceType":"module"}